import logging

from aiogram import types
from aiogram.dispatcher.filters import CommandHelp, CommandStart
from aiogram.utils.markdown import hbold, hlink, quote_html

from loader import dp, db, bot
from utils.helper import notify_channel
from config import USERS_TABLE


@dp.message_handler(CommandStart())
async def cmd_start(message: types.Message):
    await message.answer('/help - –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥') 
    if db.get_where(USERS_TABLE, message.from_user.id) is None:
        msg = f'‚ôøÔ∏è {message.from_user.id}:{message.chat.username}:{message.chat.full_name}'
        await notify_channel(msg)


@dp.message_handler(CommandHelp())
async def cmd_help(message: types.Message):
    user_id = message.from_user.id
    user = db.get_where(USERS_TABLE, user_id)
    user_group = user[3] if user is not None else None
    text = []
    if user_group == 1: text.extend(['‚ôøÔ∏è –ü–æ–∂–∏–ª—ã–º —Ñ–∞—Ä–º–µ—Ä–∞–º –Ω–µ –Ω—É–∂–Ω—ã –∫–æ–º–∞–Ω–¥—ã'])
    elif user_group == 2: # Customer  
        text.extend(
            [
                '{cmd} - –í—ã–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É'.format(cmd='/task'),  
                '{cmd} - –ú–æ–∏ –∞–∫–∫–∞—É–Ω—Ç—ã'.format(cmd='/accs')
            ]
        )
    elif user_group == 3: # Admin
        text.extend(
            [
                '{cmd} - –í—ã–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É'.format(cmd='/task'),  
                '{cmd} - –ê–∫—Ç–∏–≤–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã'.format(cmd='/accs'),
                '{cmd} - –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'.format(cmd='/user'),
                '{cmd} - –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ –∑–∞ –º–µ—Å—è—Ü'.format(cmd='/done'),
                '{cmd} - –ó–∞–¥–∞—á–∏ –≤ —Ä–∞–±–æ—Ç–µ'.format(cmd='/inwork')
            ]
        )
    else: text.extend(['üö∑ –î–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ'])
    await message.answer('\n'.join(text))


@dp.errors_handler()
async def errors_handler(update: types.Update, exception: Exception):
    try:
        raise exception
    except Exception as e:
        logging.exception("Cause exception {e} in update {update}", e=e, update=update)
    return True
